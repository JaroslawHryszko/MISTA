#Test code generated by MISTA



class SDN_FirewallTester_RT( unittest.TestCase):

	
	
	def setUp() :
		sdn_firewall = new SDN_Firewall()
	
	
	def test1() :
		print "Test case 1"
		sdn_firewall.AddFirewallRule()
		self.assert_(sdn_firewall.S3(), '1_1')
		equals(fr, fr+1)
		sdn_firewall.disableFirewall()	#constraint: Firewall_Enabled
		self.assert_(sdn_firewall.S7(), '1_1_1')
		Firewall_Disabled()
		sdn_firewall.enableFirewall()	#constraint: Firewall_Disabled
		self.assert_(sdn_firewall.S3(), '1_1_1_1')
		Firewall_Enabled()
	

	def test2() :
		print "Test case 2"
		sdn_firewall.AddFirewallRule()
		sdn_firewall.disableFirewall()	#constraint: Firewall_Enabled
		sdn_firewall.deleteFirewallRule()	#constraint: fr>0
		self.assert_(sdn_firewall.S5(), '1_1_1_2')
		equals(fr, fr-1)
	

	def test3() :
		print "Test case 3"
		sdn_firewall.AddFirewallRule()
		sdn_firewall.disableFirewall()	#constraint: Firewall_Enabled
		sdn_firewall.AddFlowtableRule()
		self.assert_(sdn_firewall.S6(), '1_1_1_3')
		equals(ft, ft+1)
		sdn_firewall.deleteFlowtableRule()	#constraint: ft>0
		self.assert_(sdn_firewall.S7(), '1_1_1_3_1')
		equals(ft, ft-1)
	

	def test4() :
		print "Test case 4"
		sdn_firewall.AddFirewallRule()
		sdn_firewall.disableFirewall()	#constraint: Firewall_Enabled
		sdn_firewall.AddFlowtableRule()
		sdn_firewall.enableFirewall()	#constraint: Firewall_Disabled
		self.assert_(sdn_firewall.S2(), '1_1_1_3_2')
		Firewall_Enabled()
	

	def test5() :
		print "Test case 5"
		sdn_firewall.AddFirewallRule()
		sdn_firewall.disableFirewall()	#constraint: Firewall_Enabled
		sdn_firewall.AddFlowtableRule()
		sdn_firewall.deleteFirewallRule()	#constraint: fr>0
		self.assert_(sdn_firewall.S8(), '1_1_1_3_3')
		equals(fr, fr-1)
	

	def test6() :
		print "Test case 6"
		sdn_firewall.AddFirewallRule()
		sdn_firewall.deleteFirewallRule()	#constraint: fr>0
		self.assert_(sdn_firewall.S1(), '1_1_2')
		equals(fr, fr-1)
	

	def test7() :
		print "Test case 7"
		sdn_firewall.AddFirewallRule()
		sdn_firewall.AddFlowtableRule()
		self.assert_(sdn_firewall.S2(), '1_1_3')
		equals(ft, ft+1)
		sdn_firewall.deleteFlowtableRule()	#constraint: ft>0
		self.assert_(sdn_firewall.S3(), '1_1_3_1')
		equals(ft, fr-1)
	

	def test8() :
		print "Test case 8"
		sdn_firewall.AddFirewallRule()
		sdn_firewall.AddFlowtableRule()
		sdn_firewall.disableFirewall()	#constraint: Firewall_Enabled
		self.assert_(sdn_firewall.S6(), '1_1_3_2')
		Firewall_Disabled()
	

	def test9() :
		print "Test case 9"
		sdn_firewall.AddFirewallRule()
		sdn_firewall.AddFlowtableRule()
		sdn_firewall.deleteFirewallRule()	#constraint: fr>0
		self.assert_(sdn_firewall.S4(), '1_1_3_3')
		equals(fr, fr-1)
	

	def test10() :
		print "Test case 10"
		sdn_firewall.disableFirewall()	#constraint: Firewall_Enabled
		self.assert_(sdn_firewall.S5(), '1_2')
		Firewall_Disabled()
		sdn_firewall.AddFirewallRule()
		self.assert_(sdn_firewall.S7(), '1_2_1')
		equals(fr, fr+1)
	

	def test11() :
		print "Test case 11"
		sdn_firewall.disableFirewall()	#constraint: Firewall_Enabled
		sdn_firewall.enableFirewall()	#constraint: Firewall_Disabled
		self.assert_(sdn_firewall.S1(), '1_2_2')
		Firewall_Enabled()
	

	def test12() :
		print "Test case 12"
		sdn_firewall.AddFlowtableRule()
		self.assert_(sdn_firewall.S4(), '1_3')
		equals(ft, ft+1)
		sdn_firewall.AddFirewallRule()
		self.assert_(sdn_firewall.S2(), '1_3_1')
		equals(fr, fr+1)
	

	def test13() :
		print "Test case 13"
		sdn_firewall.AddFlowtableRule()
		sdn_firewall.deleteFlowtableRule()	#constraint: ft>0
		self.assert_(sdn_firewall.S1(), '1_3_2')
		equals(ft, ft-1)
	

	def test14() :
		print "Test case 14"
		sdn_firewall.AddFlowtableRule()
		sdn_firewall.disableFirewall()	#constraint: Firewall_Enabled
		self.assert_(sdn_firewall.S8(), '1_3_3')
		Firewall_Disabled()
		sdn_firewall.AddFirewallRule()
		self.assert_(sdn_firewall.S6(), '1_3_3_1')
		equals(fr, fr+1)
	

	def test15() :
		print "Test case 15"
		sdn_firewall.AddFlowtableRule()
		sdn_firewall.disableFirewall()	#constraint: Firewall_Enabled
		sdn_firewall.deleteFlowtableRule()	#constraint: ft>0
		self.assert_(sdn_firewall.S5(), '1_3_3_2')
		equals(ft, ft-1)
	

	def test16() :
		print "Test case 16"
		sdn_firewall.AddFlowtableRule()
		sdn_firewall.disableFirewall()	#constraint: Firewall_Enabled
		sdn_firewall.enableFirewall()	#constraint: Firewall_Disabled
		self.assert_(sdn_firewall.S4(), '1_3_3_3')
		Firewall_Enabled()
	

	if __name__ == '__main__':
		suite = unittest.TestSuite()
		suite.addTest(unittest.makeSuite(SDN_FirewallTester_RT))
		unittest.TextTestRunner(verbosity=2).run(suite)